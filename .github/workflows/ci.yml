name: CI

on: [push]

jobs:
  tests:
    name: CI
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: lesk
          MYSQL_DATABASE: lesk
          MYSQL_PASSWORD: password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Cache node dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Set node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: 22.x

      - name: Run yarn install
        uses: borales/actions-yarn@v5
        with:
          cmd: install

      - name: Run yarn build
        uses: borales/actions-yarn@v5
        with:
          cmd: build

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, mysql
          coverage: pcov

      - name: Run composer install
        run: composer install -n --prefer-dist

      - name: Prepare Laravel Application
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          cp .env.ci .env
          php artisan key:generate
          php artisan migrate

      - name: Run tests
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: php artisan test --coverage --coverage-clover storage/coverage/coverage.xml

      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./storage/coverage/coverage.xml
